{
  "contractName": "RegistryUser",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "REG",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "THIS_NAME",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "go",
          "type": "bool"
        }
      ],
      "name": "Per",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "isPermitted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008054600160a060020a03191633179055610333806100256000396000f3006080604052600436106100775763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166339363112811461007c5780633fd8cc4e146100ad57806364319d0b146100e25780638da5cb5b14610109578063a91ee0dc1461011e578063f2fde38b14610141575b600080fd5b34801561008857600080fd5b50610091610162565b60408051600160a060020a039092168252519081900360200190f35b3480156100b957600080fd5b506100ce600160a060020a0360043516610171565b604080519115158252519081900360200190f35b3480156100ee57600080fd5b506100f7610218565b60408051918252519081900360200190f35b34801561011557600080fd5b5061009161021e565b34801561012a57600080fd5b5061013f600160a060020a036004351661022d565b005b34801561014d57600080fd5b5061013f600160a060020a0360043516610273565b600154600160a060020a031681565b600154600254604080517f60d6c7cf0000000000000000000000000000000000000000000000000000000081526004810192909252600160a060020a038481166024840152905160009391909116916360d6c7cf91604480830192602092919082900301818787803b1580156101e657600080fd5b505af11580156101fa573d6000803e3d6000fd5b505050506040513d602081101561021057600080fd5b505192915050565b60025481565b600054600160a060020a031681565b600054600160a060020a0316331461024457600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a0316331461028a57600080fd5b600160a060020a038116151561029f57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820ac8c8eb2b0946fe3aad5112af413aac30e69f86e1f1805ce1662380bf7b8ad170029",
  "deployedBytecode": "0x6080604052600436106100775763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166339363112811461007c5780633fd8cc4e146100ad57806364319d0b146100e25780638da5cb5b14610109578063a91ee0dc1461011e578063f2fde38b14610141575b600080fd5b34801561008857600080fd5b50610091610162565b60408051600160a060020a039092168252519081900360200190f35b3480156100b957600080fd5b506100ce600160a060020a0360043516610171565b604080519115158252519081900360200190f35b3480156100ee57600080fd5b506100f7610218565b60408051918252519081900360200190f35b34801561011557600080fd5b5061009161021e565b34801561012a57600080fd5b5061013f600160a060020a036004351661022d565b005b34801561014d57600080fd5b5061013f600160a060020a0360043516610273565b600154600160a060020a031681565b600154600254604080517f60d6c7cf0000000000000000000000000000000000000000000000000000000081526004810192909252600160a060020a038481166024840152905160009391909116916360d6c7cf91604480830192602092919082900301818787803b1580156101e657600080fd5b505af11580156101fa573d6000803e3d6000fd5b505050506040513d602081101561021057600080fd5b505192915050565b60025481565b600054600160a060020a031681565b600054600160a060020a0316331461024457600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a0316331461028a57600080fd5b600160a060020a038116151561029f57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820ac8c8eb2b0946fe3aad5112af413aac30e69f86e1f1805ce1662380bf7b8ad170029",
  "sourceMap": "207:894:1:-;;;501:5:8;:18;;-1:-1:-1;;;;;;501:18:8;509:10;501:18;;;207:894:1;;;;;;",
  "deployedSourceMap": "207:894:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;251:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;251:19:1;;;;;;;;-1:-1:-1;;;;;251:19:1;;;;;;;;;;;;;;983:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;983:116:1;-1:-1:-1;;;;;983:116:1;;;;;;;;;;;;;;;;;;;;;;;276:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;276:24:1;;;;;;;;;;;;;;;;;;;;238:20:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:8;;;;596:91:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;596:91:1;-1:-1:-1;;;;;596:91:1;;;;;;;832:174:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;832:174:8;-1:-1:-1;;;;;832:174:8;;;;;251:19:1;;;-1:-1:-1;;;;;251:19:1;;:::o;983:116::-;1057:3;;1075:9;;1057:35;;;;;;;;;;;;;-1:-1:-1;;;;;1057:35:1;;;;;;;;;1034:4;;1057:3;;;;;:17;;:35;;;;;;;;;;;;;;1034:4;1057:3;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;1057:35:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1057:35:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1057:35:1;;983:116;-1:-1:-1;;983:116:1:o;276:24::-;;;;:::o;238:20:8:-;;;-1:-1:-1;;;;;238:20:8;;:::o;596:91:1:-;653:5:8;;-1:-1:-1;;;;;653:5:8;639:10;:19;631:28;;;;;;659:3:1;:21;;-1:-1:-1;;659:21:1;-1:-1:-1;;;;;659:21:1;;;;;;;;;;596:91::o;832:174:8:-;653:5;;-1:-1:-1;;;;;653:5:8;639:10;:19;631:28;;;;;;-1:-1:-1;;;;;908:22:8;;;;900:31;;;;;;963:5;;;942:37;;-1:-1:-1;;;;;942:37:8;;;;963:5;;;942:37;;;985:5;:16;;-1:-1:-1;;985:16:8;-1:-1:-1;;;;;985:16:8;;;;;;;;;;832:174::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"./Registry.sol\";\n\n/**\n * @title RegistryUser\n * @dev RegistryUser Contract that uses Registry contract\n */\ncontract RegistryUser is Ownable {\n    \n    Registry public REG;\n    bytes32 public THIS_NAME;\n    event Per(address addr, bytes32 name, bool go);\n\n    /**\n     * @dev Function to set registry address. Contract that wants to use registry should setRegistry first.\n     * @param _addr address of registry\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function setRegistry(address _addr) public onlyOwner {\n        REG = Registry(_addr);\n    }\n    \n    modifier permissioned() {\n        require(isPermitted(msg.sender));\n        _;\n    }\n\n    /**\n     * @dev Function to check the permission\n     * @param _addr address of sender to check the permission\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function isPermitted(address _addr) public returns(bool) {\n        return REG.getPermission(THIS_NAME, _addr);\n    }\n}",
  "sourcePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/RegistryUser.sol",
  "ast": {
    "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/RegistryUser.sol",
    "exportedSymbols": {
      "RegistryUser": [
        200
      ]
    },
    "id": 201,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 144,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "./openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 145,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 523,
        "src": "26:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/Registry.sol",
        "file": "./Registry.sol",
        "id": 146,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 143,
        "src": "92:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 147,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 522,
              "src": "232:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$522",
                "typeString": "contract Ownable"
              }
            },
            "id": 148,
            "nodeType": "InheritanceSpecifier",
            "src": "232:7:1"
          }
        ],
        "contractDependencies": [
          522
        ],
        "contractKind": "contract",
        "documentation": "@title RegistryUser\n@dev RegistryUser Contract that uses Registry contract",
        "fullyImplemented": true,
        "id": 200,
        "linearizedBaseContracts": [
          200,
          522
        ],
        "name": "RegistryUser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 150,
            "name": "REG",
            "nodeType": "VariableDeclaration",
            "scope": 200,
            "src": "251:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registry_$142",
              "typeString": "contract Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 149,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 142,
              "src": "251:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$142",
                "typeString": "contract Registry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 152,
            "name": "THIS_NAME",
            "nodeType": "VariableDeclaration",
            "scope": 200,
            "src": "276:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 151,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 160,
            "name": "Per",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "316:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "indexed": false,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "330:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "indexed": false,
                  "name": "go",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "344:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "315:37:1"
            },
            "src": "306:47:1"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "649:38:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 167,
                      "name": "REG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "659:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$142",
                        "typeString": "contract Registry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 169,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "674:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 168,
                        "name": "Registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "665:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Registry_$142_$",
                          "typeString": "type(contract Registry)"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "665:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$142",
                        "typeString": "contract Registry"
                      }
                    },
                    "src": "659:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$142",
                      "typeString": "contract Registry"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "659:21:1"
                }
              ]
            },
            "documentation": "@dev Function to set registry address. Contract that wants to use registry should setRegistry first.\n@param _addr address of registry\n@return A boolean that indicates if the operation was successful.",
            "id": 174,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 165,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 164,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 496,
                  "src": "639:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "639:9:1"
              }
            ],
            "name": "setRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "617:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "616:15:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "649:0:1"
            },
            "scope": 200,
            "src": "596:91:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "721:60:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 178,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2836,
                              "src": "751:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "751:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 177,
                          "name": "isPermitted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 199,
                          "src": "739:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "739:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2839,
                        2840
                      ],
                      "referencedDeclaration": 2839,
                      "src": "731:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "731:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "731:32:1"
                },
                {
                  "id": 183,
                  "nodeType": "PlaceholderStatement",
                  "src": "773:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 185,
            "name": "permissioned",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:2:1"
            },
            "src": "697:84:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 198,
              "nodeType": "Block",
              "src": "1040:59:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 194,
                        "name": "THIS_NAME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1075:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 195,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "1086:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 192,
                        "name": "REG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "1057:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$142",
                          "typeString": "contract Registry"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPermission",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 141,
                      "src": "1057:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view external returns (bool)"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1057:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 191,
                  "id": 197,
                  "nodeType": "Return",
                  "src": "1050:42:1"
                }
              ]
            },
            "documentation": "@dev Function to check the permission\n@param _addr address of sender to check the permission\n@return A boolean that indicates if the operation was successful.",
            "id": 199,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "1004:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1003:15:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "1034:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1033:6:1"
            },
            "scope": 200,
            "src": "983:116:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 201,
        "src": "207:894:1"
      }
    ],
    "src": "0:1101:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/RegistryUser.sol",
    "exportedSymbols": {
      "RegistryUser": [
        200
      ]
    },
    "id": 201,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 144,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "./openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 145,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 523,
        "src": "26:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/Registry.sol",
        "file": "./Registry.sol",
        "id": 146,
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 143,
        "src": "92:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 147,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 522,
              "src": "232:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$522",
                "typeString": "contract Ownable"
              }
            },
            "id": 148,
            "nodeType": "InheritanceSpecifier",
            "src": "232:7:1"
          }
        ],
        "contractDependencies": [
          522
        ],
        "contractKind": "contract",
        "documentation": "@title RegistryUser\n@dev RegistryUser Contract that uses Registry contract",
        "fullyImplemented": true,
        "id": 200,
        "linearizedBaseContracts": [
          200,
          522
        ],
        "name": "RegistryUser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 150,
            "name": "REG",
            "nodeType": "VariableDeclaration",
            "scope": 200,
            "src": "251:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registry_$142",
              "typeString": "contract Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 149,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 142,
              "src": "251:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$142",
                "typeString": "contract Registry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 152,
            "name": "THIS_NAME",
            "nodeType": "VariableDeclaration",
            "scope": 200,
            "src": "276:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 151,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 160,
            "name": "Per",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "316:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "indexed": false,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "330:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "indexed": false,
                  "name": "go",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "344:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "315:37:1"
            },
            "src": "306:47:1"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "649:38:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 167,
                      "name": "REG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "659:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$142",
                        "typeString": "contract Registry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 169,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "674:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 168,
                        "name": "Registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "665:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Registry_$142_$",
                          "typeString": "type(contract Registry)"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "665:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$142",
                        "typeString": "contract Registry"
                      }
                    },
                    "src": "659:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$142",
                      "typeString": "contract Registry"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "659:21:1"
                }
              ]
            },
            "documentation": "@dev Function to set registry address. Contract that wants to use registry should setRegistry first.\n@param _addr address of registry\n@return A boolean that indicates if the operation was successful.",
            "id": 174,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 165,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 164,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 496,
                  "src": "639:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "639:9:1"
              }
            ],
            "name": "setRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "617:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "616:15:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "649:0:1"
            },
            "scope": 200,
            "src": "596:91:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "721:60:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 178,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2836,
                              "src": "751:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "751:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 177,
                          "name": "isPermitted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 199,
                          "src": "739:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "739:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2839,
                        2840
                      ],
                      "referencedDeclaration": 2839,
                      "src": "731:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "731:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "731:32:1"
                },
                {
                  "id": 183,
                  "nodeType": "PlaceholderStatement",
                  "src": "773:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 185,
            "name": "permissioned",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:2:1"
            },
            "src": "697:84:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 198,
              "nodeType": "Block",
              "src": "1040:59:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 194,
                        "name": "THIS_NAME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1075:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 195,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "1086:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 192,
                        "name": "REG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "1057:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$142",
                          "typeString": "contract Registry"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPermission",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 141,
                      "src": "1057:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view external returns (bool)"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1057:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 191,
                  "id": 197,
                  "nodeType": "Return",
                  "src": "1050:42:1"
                }
              ]
            },
            "documentation": "@dev Function to check the permission\n@param _addr address of sender to check the permission\n@return A boolean that indicates if the operation was successful.",
            "id": 199,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "1004:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1003:15:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "1034:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1033:6:1"
            },
            "scope": 200,
            "src": "983:116:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 201,
        "src": "207:894:1"
      }
    ],
    "src": "0:1101:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-23T06:14:20.758Z"
}