{
  "contractName": "RegistryUser",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "REG",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "THIS_NAME",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "isPermitted",
      "outputs": [
        {
          "name": "found",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008054600160a060020a03191633179055610333806100256000396000f3006080604052600436106100775763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166339363112811461007c5780633fd8cc4e146100ad57806364319d0b146100e25780638da5cb5b14610109578063a91ee0dc1461011e578063f2fde38b14610141575b600080fd5b34801561008857600080fd5b50610091610162565b60408051600160a060020a039092168252519081900360200190f35b3480156100b957600080fd5b506100ce600160a060020a0360043516610171565b604080519115158252519081900360200190f35b3480156100ee57600080fd5b506100f7610218565b60408051918252519081900360200190f35b34801561011557600080fd5b5061009161021e565b34801561012a57600080fd5b5061013f600160a060020a036004351661022d565b005b34801561014d57600080fd5b5061013f600160a060020a0360043516610273565b600154600160a060020a031681565b600154600254604080517f60d6c7cf0000000000000000000000000000000000000000000000000000000081526004810192909252600160a060020a038481166024840152905160009391909116916360d6c7cf91604480830192602092919082900301818787803b1580156101e657600080fd5b505af11580156101fa573d6000803e3d6000fd5b505050506040513d602081101561021057600080fd5b505192915050565b60025481565b600054600160a060020a031681565b600054600160a060020a0316331461024457600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a0316331461028a57600080fd5b600160a060020a038116151561029f57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058200df94b0e99f7fd659149dc69adcd68bce49bf956791a5b1972da25597792f0840029",
  "deployedBytecode": "0x6080604052600436106100775763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166339363112811461007c5780633fd8cc4e146100ad57806364319d0b146100e25780638da5cb5b14610109578063a91ee0dc1461011e578063f2fde38b14610141575b600080fd5b34801561008857600080fd5b50610091610162565b60408051600160a060020a039092168252519081900360200190f35b3480156100b957600080fd5b506100ce600160a060020a0360043516610171565b604080519115158252519081900360200190f35b3480156100ee57600080fd5b506100f7610218565b60408051918252519081900360200190f35b34801561011557600080fd5b5061009161021e565b34801561012a57600080fd5b5061013f600160a060020a036004351661022d565b005b34801561014d57600080fd5b5061013f600160a060020a0360043516610273565b600154600160a060020a031681565b600154600254604080517f60d6c7cf0000000000000000000000000000000000000000000000000000000081526004810192909252600160a060020a038481166024840152905160009391909116916360d6c7cf91604480830192602092919082900301818787803b1580156101e657600080fd5b505af11580156101fa573d6000803e3d6000fd5b505050506040513d602081101561021057600080fd5b505192915050565b60025481565b600054600160a060020a031681565b600054600160a060020a0316331461024457600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a0316331461028a57600080fd5b600160a060020a038116151561029f57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058200df94b0e99f7fd659149dc69adcd68bce49bf956791a5b1972da25597792f0840029",
  "sourceMap": "207:875:3:-;;;501:5:23;:18;;-1:-1:-1;;;;;;501:18:23;509:10;501:18;;;207:875:3;;;;;;",
  "deployedSourceMap": "207:875:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;251:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;251:19:3;;;;;;;;-1:-1:-1;;;;;251:19:3;;;;;;;;;;;;;;948:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;948:127:3;-1:-1:-1;;;;;948:127:3;;;;;;;;;;;;;;;;;;;;;;;276:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;276:24:3;;;;;;;;;;;;;;;;;;;;238:20:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:23;;;;544:91:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;544:91:3;-1:-1:-1;;;;;544:91:3;;;;;;;832:174:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;832:174:23;-1:-1:-1;;;;;832:174:23;;;;;251:19:3;;;-1:-1:-1;;;;;251:19:3;;:::o;948:127::-;1033:3;;1051:9;;1033:35;;;;;;;;;;;;;-1:-1:-1;;;;;1033:35:3;;;;;;;;;1004:10;;1033:3;;;;;:17;;:35;;;;;;;;;;;;;;1004:10;1033:3;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;1033:35:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1033:35:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1033:35:3;;948:127;-1:-1:-1;;948:127:3:o;276:24::-;;;;:::o;238:20:23:-;;;-1:-1:-1;;;;;238:20:23;;:::o;544:91:3:-;653:5:23;;-1:-1:-1;;;;;653:5:23;639:10;:19;631:28;;;;;;607:3:3;:21;;-1:-1:-1;;607:21:3;-1:-1:-1;;;;;607:21:3;;;;;;;;;;544:91::o;832:174:23:-;653:5;;-1:-1:-1;;;;;653:5:23;639:10;:19;631:28;;;;;;-1:-1:-1;;;;;908:22:23;;;;900:31;;;;;;963:5;;;942:37;;-1:-1:-1;;;;;942:37:23;;;;963:5;;;942:37;;;985:5;:16;;-1:-1:-1;;985:16:23;-1:-1:-1;;;;;985:16:23;;;;;;;;;;832:174::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"./Registry.sol\";\n\n/**\n * @title RegistryUser\n * @dev RegistryUser Contract that uses Registry contract\n */\ncontract RegistryUser is Ownable {\n    \n    Registry public REG;\n    bytes32 public THIS_NAME;\n\n    /**\n     * @dev Function to set registry address. Contract that wants to use registry should setRegistry first.\n     * @param _addr address of registry\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function setRegistry(address _addr) public onlyOwner {\n        REG = Registry(_addr);\n    }\n    \n    modifier permissioned() {\n        require(isPermitted(msg.sender), \"No Permission\");\n        _;\n    }\n\n    /**\n     * @dev Function to check the permission\n     * @param _addr address of sender to check the permission\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function isPermitted(address _addr) public view returns(bool found) {\n        return REG.getPermission(THIS_NAME, _addr);\n    }\n    \n}",
  "sourcePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/RegistryUser.sol",
  "ast": {
    "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/RegistryUser.sol",
    "exportedSymbols": {
      "RegistryUser": [
        436
      ]
    },
    "id": 437,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 387,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "./openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 388,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 4765,
        "src": "26:65:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/Registry.sol",
        "file": "./Registry.sol",
        "id": 389,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 386,
        "src": "92:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 390,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4764,
              "src": "232:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4764",
                "typeString": "contract Ownable"
              }
            },
            "id": 391,
            "nodeType": "InheritanceSpecifier",
            "src": "232:7:3"
          }
        ],
        "contractDependencies": [
          4764
        ],
        "contractKind": "contract",
        "documentation": "@title RegistryUser\n@dev RegistryUser Contract that uses Registry contract",
        "fullyImplemented": true,
        "id": 436,
        "linearizedBaseContracts": [
          436,
          4764
        ],
        "name": "RegistryUser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 393,
            "name": "REG",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "251:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registry_$385",
              "typeString": "contract Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 392,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 385,
              "src": "251:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$385",
                "typeString": "contract Registry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 395,
            "name": "THIS_NAME",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "276:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 394,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "597:38:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 402,
                      "name": "REG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 393,
                      "src": "607:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$385",
                        "typeString": "contract Registry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 404,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "622:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 403,
                        "name": "Registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "613:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Registry_$385_$",
                          "typeString": "type(contract Registry)"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "613:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$385",
                        "typeString": "contract Registry"
                      }
                    },
                    "src": "607:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$385",
                      "typeString": "contract Registry"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "607:21:3"
                }
              ]
            },
            "documentation": "@dev Function to set registry address. Contract that wants to use registry should setRegistry first.\n@param _addr address of registry\n@return A boolean that indicates if the operation was successful.",
            "id": 409,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 400,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 399,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4738,
                  "src": "587:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "587:9:3"
              }
            ],
            "name": "setRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "565:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "564:15:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:0:3"
            },
            "scope": 436,
            "src": "544:91:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "669:77:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 413,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4779,
                              "src": "699:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "699:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 412,
                          "name": "isPermitted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "687:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "687:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f205065726d697373696f6e",
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "712:15:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_814d4b6764cdd369f4d16e59df2b065e4d871993d3fb449e1ef2470967e69176",
                          "typeString": "literal_string \"No Permission\""
                        },
                        "value": "No Permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_814d4b6764cdd369f4d16e59df2b065e4d871993d3fb449e1ef2470967e69176",
                          "typeString": "literal_string \"No Permission\""
                        }
                      ],
                      "id": 411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4782,
                        4783
                      ],
                      "referencedDeclaration": 4783,
                      "src": "679:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "679:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "679:49:3"
                },
                {
                  "id": 419,
                  "nodeType": "PlaceholderStatement",
                  "src": "738:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 421,
            "name": "permissioned",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "666:2:3"
            },
            "src": "645:101:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "1016:59:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 430,
                        "name": "THIS_NAME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "1051:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 431,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "1062:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 428,
                        "name": "REG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "1033:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$385",
                          "typeString": "contract Registry"
                        }
                      },
                      "id": 429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPermission",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 384,
                      "src": "1033:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view external returns (bool)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 427,
                  "id": 433,
                  "nodeType": "Return",
                  "src": "1026:42:3"
                }
              ]
            },
            "documentation": "@dev Function to check the permission\n@param _addr address of sender to check the permission\n@return A boolean that indicates if the operation was successful.",
            "id": 435,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "969:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "968:15:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 426,
                  "name": "found",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "1004:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1003:12:3"
            },
            "scope": 436,
            "src": "948:127:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 437,
        "src": "207:875:3"
      }
    ],
    "src": "0:1082:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/RegistryUser.sol",
    "exportedSymbols": {
      "RegistryUser": [
        436
      ]
    },
    "id": 437,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 387,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "./openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 388,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 4765,
        "src": "26:65:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/Registry.sol",
        "file": "./Registry.sol",
        "id": 389,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 386,
        "src": "92:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 390,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4764,
              "src": "232:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4764",
                "typeString": "contract Ownable"
              }
            },
            "id": 391,
            "nodeType": "InheritanceSpecifier",
            "src": "232:7:3"
          }
        ],
        "contractDependencies": [
          4764
        ],
        "contractKind": "contract",
        "documentation": "@title RegistryUser\n@dev RegistryUser Contract that uses Registry contract",
        "fullyImplemented": true,
        "id": 436,
        "linearizedBaseContracts": [
          436,
          4764
        ],
        "name": "RegistryUser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 393,
            "name": "REG",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "251:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registry_$385",
              "typeString": "contract Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 392,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 385,
              "src": "251:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$385",
                "typeString": "contract Registry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 395,
            "name": "THIS_NAME",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "276:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 394,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "597:38:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 402,
                      "name": "REG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 393,
                      "src": "607:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$385",
                        "typeString": "contract Registry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 404,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "622:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 403,
                        "name": "Registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "613:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Registry_$385_$",
                          "typeString": "type(contract Registry)"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "613:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$385",
                        "typeString": "contract Registry"
                      }
                    },
                    "src": "607:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$385",
                      "typeString": "contract Registry"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "607:21:3"
                }
              ]
            },
            "documentation": "@dev Function to set registry address. Contract that wants to use registry should setRegistry first.\n@param _addr address of registry\n@return A boolean that indicates if the operation was successful.",
            "id": 409,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 400,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 399,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4738,
                  "src": "587:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "587:9:3"
              }
            ],
            "name": "setRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "565:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "564:15:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:0:3"
            },
            "scope": 436,
            "src": "544:91:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "669:77:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 413,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4779,
                              "src": "699:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "699:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 412,
                          "name": "isPermitted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "687:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "687:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f205065726d697373696f6e",
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "712:15:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_814d4b6764cdd369f4d16e59df2b065e4d871993d3fb449e1ef2470967e69176",
                          "typeString": "literal_string \"No Permission\""
                        },
                        "value": "No Permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_814d4b6764cdd369f4d16e59df2b065e4d871993d3fb449e1ef2470967e69176",
                          "typeString": "literal_string \"No Permission\""
                        }
                      ],
                      "id": 411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4782,
                        4783
                      ],
                      "referencedDeclaration": 4783,
                      "src": "679:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "679:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "679:49:3"
                },
                {
                  "id": 419,
                  "nodeType": "PlaceholderStatement",
                  "src": "738:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 421,
            "name": "permissioned",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "666:2:3"
            },
            "src": "645:101:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "1016:59:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 430,
                        "name": "THIS_NAME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "1051:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 431,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "1062:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 428,
                        "name": "REG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "1033:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Registry_$385",
                          "typeString": "contract Registry"
                        }
                      },
                      "id": 429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPermission",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 384,
                      "src": "1033:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view external returns (bool)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 427,
                  "id": 433,
                  "nodeType": "Return",
                  "src": "1026:42:3"
                }
              ]
            },
            "documentation": "@dev Function to check the permission\n@param _addr address of sender to check the permission\n@return A boolean that indicates if the operation was successful.",
            "id": 435,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "969:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "968:15:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 426,
                  "name": "found",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "1004:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1003:12:3"
            },
            "scope": 436,
            "src": "948:127:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 437,
        "src": "207:875:3"
      }
    ],
    "src": "0:1082:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-06T03:09:30.825Z"
}