{
  "contractName": "SignatureVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "toSign",
          "type": "bytes32"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "getSignatureAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506102d7806100206000396000f3006080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633b8a12c88114610045575b600080fd5b34801561005157600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526100a39583359536956044949193909101919081908401838280828437509497506100cc9650505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60006101cf826040805190810160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250856040516020018083805190602001908083835b6020831061013b5780518252601f19909201916020918201910161011c565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b6020831061019b5780518252601f19909201916020918201910161017c565b5181516020939093036101000a60001901801990911692169190911790526040519201829003909120939250506101d69050565b9392505050565b600080600080845160411415156101f057600093506102a2565b50505060208201516040830151606084015160001a601b60ff8216101561021557601b015b8060ff16601b1415801561022d57508060ff16601c14155b1561023b57600093506102a2565b60408051600080825260208083018085528a905260ff8516838501526060830187905260808301869052925160019360a0808501949193601f19840193928390039091019190865af1158015610295573d6000803e3d6000fd5b5050506020604051035193505b505050929150505600a165627a7a7230582036d521c1d7ce7540958eb1238ca8dc5d817707108c5fd9b27e27b0e2252f0b0a0029",
  "deployedBytecode": "0x6080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633b8a12c88114610045575b600080fd5b34801561005157600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526100a39583359536956044949193909101919081908401838280828437509497506100cc9650505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60006101cf826040805190810160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250856040516020018083805190602001908083835b6020831061013b5780518252601f19909201916020918201910161011c565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190819052835193945092839250908401908083835b6020831061019b5780518252601f19909201916020918201910161017c565b5181516020939093036101000a60001901801990911692169190911790526040519201829003909120939250506101d69050565b9392505050565b600080600080845160411415156101f057600093506102a2565b50505060208201516040830151606084015160001a601b60ff8216101561021557601b015b8060ff16601b1415801561022d57508060ff16601c14155b1561023b57600093506102a2565b60408051600080825260208083018085528a905260ff8516838501526060830187905260808301869052925160019360a0808501949193601f19840193928390039091019190865af1158015610295573d6000803e3d6000fd5b5050506020604051035193505b505050929150505600a165627a7a7230582036d521c1d7ce7540958eb1238ca8dc5d817707108c5fd9b27e27b0e2252f0b0a0029",
  "sourceMap": "87:629:17:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;87:629:17;;;;;;;",
  "deployedSourceMap": "87:629:17:-;;;;;;;;;;;;;;;;;;;;;;;503:210;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;503:210:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;503:210:17;;-1:-1:-1;503:210:17;;-1:-1:-1;;;;;;;503:210:17;;;;;;;;;;;;;;;;;;;;;610:7;640:66;696:9;667:10;;;;;;;;;;;;;;;;;;679:6;650:36;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;650:36:17;;;;;-1:-1:-1;650:36:17;;;26:21:-1;;;6:49;;650:36:17;;;;;;;640:47;;650:36;;-1:-1:-1;650:36:17;;;-1:-1:-1;640:47:17;;;;;650:36;640:47;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;640:47:17;;;;;;;;;;;;-1:-1:-1;;640:55:17;:66;-1:-1:-1;640:66:17:i;:::-;633:73;503:210;-1:-1:-1;;;503:210:17:o;607:932:19:-;684:7;701:9;716;731:7;783:3;:10;797:2;783:16;;779:56;;;825:1;809:19;;;;779:56;-1:-1:-1;;;1105:2:19;1096:12;;1090:19;1136:2;1127:12;;1121:19;1175:2;1166:12;;1160:19;1157:1;1152:28;1287:2;1283:6;;;;1279:34;;;1304:2;1299:7;1279:34;1382:1;:7;;1387:2;1382:7;;:18;;;;;1393:1;:7;;1398:2;1393:7;;1382:18;1378:157;;;1426:1;1410:19;;;;1378:157;1504:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1504:24:19;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1504:24:19;;;;;;;;1497:31;;1378:157;607:932;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"../openzeppelin-solidity/contracts/ECRecovery.sol\";\n\ncontract SignatureVerifier {\n    using ECRecovery for bytes32;\n    bytes constant internal ETH_PREFIX = \"\\x19Ethereum Signed Message:\\n32\";\n\n    /// @dev Recover address used to sign a claim\n    /// @param toSign Hash to be signed, potentially generated with `claimToSign`\n    /// @param signature Signature data i.e. signed hash\n    /// @return address recovered from `signature` which signed the `toSign` hash\n    function getSignatureAddress(bytes32 toSign, bytes signature)\n        public\n        pure\n        returns (address)\n    {\n        return keccak256(abi.encodePacked(ETH_PREFIX, toSign)).recover(signature);\n    }\n\n}",
  "sourcePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/identity/SignatureVerifier.sol",
  "ast": {
    "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/identity/SignatureVerifier.sol",
    "exportedSymbols": {
      "SignatureVerifier": [
        3678
      ]
    },
    "id": 3679,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3649,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:17"
      },
      {
        "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/openzeppelin-solidity/contracts/ECRecovery.sol",
        "file": "../openzeppelin-solidity/contracts/ECRecovery.sol",
        "id": 3650,
        "nodeType": "ImportDirective",
        "scope": 3679,
        "sourceUnit": 3830,
        "src": "26:59:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3678,
        "linearizedBaseContracts": [
          3678
        ],
        "name": "SignatureVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3653,
            "libraryName": {
              "contractScope": null,
              "id": 3651,
              "name": "ECRecovery",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3829,
              "src": "126:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ECRecovery_$3829",
                "typeString": "library ECRecovery"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "120:29:17",
            "typeName": {
              "id": 3652,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "141:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "constant": true,
            "id": 3656,
            "name": "ETH_PREFIX",
            "nodeType": "VariableDeclaration",
            "scope": 3678,
            "src": "154:71:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_memory",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 3654,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "154:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
              "id": 3655,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "191:34:17",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
              },
              "value": "\u0019Ethereum Signed Message:\n32"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3676,
              "nodeType": "Block",
              "src": "623:90:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3673,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3660,
                        "src": "696:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3668,
                                "name": "ETH_PREFIX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3656,
                                "src": "667:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 3669,
                                "name": "toSign",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3658,
                                "src": "679:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3666,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4592,
                                "src": "650:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "650:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "650:36:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3665,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4599,
                          "src": "640:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                            "typeString": "function () pure returns (bytes32)"
                          }
                        },
                        "id": 3671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "640:47:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 3672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3815,
                      "src": "640:55:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 3674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "640:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3664,
                  "id": 3675,
                  "nodeType": "Return",
                  "src": "633:73:17"
                }
              ]
            },
            "documentation": "@dev Recover address used to sign a claim\n @param toSign Hash to be signed, potentially generated with `claimToSign`\n @param signature Signature data i.e. signed hash\n @return address recovered from `signature` which signed the `toSign` hash",
            "id": 3677,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getSignatureAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3658,
                  "name": "toSign",
                  "nodeType": "VariableDeclaration",
                  "scope": 3677,
                  "src": "532:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3657,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3660,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 3677,
                  "src": "548:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3659,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "531:33:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 3664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3663,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3677,
                  "src": "610:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "609:9:17"
            },
            "scope": 3678,
            "src": "503:210:17",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3679,
        "src": "87:629:17"
      }
    ],
    "src": "0:716:17"
  },
  "legacyAST": {
    "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/identity/SignatureVerifier.sol",
    "exportedSymbols": {
      "SignatureVerifier": [
        3678
      ]
    },
    "id": 3679,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3649,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:17"
      },
      {
        "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/openzeppelin-solidity/contracts/ECRecovery.sol",
        "file": "../openzeppelin-solidity/contracts/ECRecovery.sol",
        "id": 3650,
        "nodeType": "ImportDirective",
        "scope": 3679,
        "sourceUnit": 3830,
        "src": "26:59:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3678,
        "linearizedBaseContracts": [
          3678
        ],
        "name": "SignatureVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3653,
            "libraryName": {
              "contractScope": null,
              "id": 3651,
              "name": "ECRecovery",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3829,
              "src": "126:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ECRecovery_$3829",
                "typeString": "library ECRecovery"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "120:29:17",
            "typeName": {
              "id": 3652,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "141:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "constant": true,
            "id": 3656,
            "name": "ETH_PREFIX",
            "nodeType": "VariableDeclaration",
            "scope": 3678,
            "src": "154:71:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_memory",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 3654,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "154:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
              "id": 3655,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "191:34:17",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
              },
              "value": "\u0019Ethereum Signed Message:\n32"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3676,
              "nodeType": "Block",
              "src": "623:90:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3673,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3660,
                        "src": "696:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3668,
                                "name": "ETH_PREFIX",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3656,
                                "src": "667:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 3669,
                                "name": "toSign",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3658,
                                "src": "679:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3666,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4592,
                                "src": "650:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "650:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "650:36:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3665,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4599,
                          "src": "640:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                            "typeString": "function () pure returns (bytes32)"
                          }
                        },
                        "id": 3671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "640:47:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 3672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3815,
                      "src": "640:55:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 3674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "640:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3664,
                  "id": 3675,
                  "nodeType": "Return",
                  "src": "633:73:17"
                }
              ]
            },
            "documentation": "@dev Recover address used to sign a claim\n @param toSign Hash to be signed, potentially generated with `claimToSign`\n @param signature Signature data i.e. signed hash\n @return address recovered from `signature` which signed the `toSign` hash",
            "id": 3677,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getSignatureAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3658,
                  "name": "toSign",
                  "nodeType": "VariableDeclaration",
                  "scope": 3677,
                  "src": "532:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3657,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3660,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 3677,
                  "src": "548:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3659,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "531:33:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 3664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3663,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3677,
                  "src": "610:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "609:9:17"
            },
            "scope": 3678,
            "src": "503:210:17",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3679,
        "src": "87:629:17"
      }
    ],
    "src": "0:716:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-15T06:35:20.203Z"
}