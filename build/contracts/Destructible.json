{
  "contractName": "Destructible",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "MANAGEMENT_KEY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "actionThreshold",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addrToKey",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "managementThreshold",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numKeys",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "destroyAndSend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260016000556001805534801561001957600080fd5b50610331806100296000396000f3006080604052600436106100775763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663058b316c811461007c57806338f4edd4146100a357806363f14c3c146100b8578063aa0a5142146100e6578063c9d24ecc146100fb578063f5074f4114610110575b600080fd5b34801561008857600080fd5b50610091610140565b60408051918252519081900360200190f35b3480156100af57600080fd5b50610091610145565b3480156100c457600080fd5b5061009173ffffffffffffffffffffffffffffffffffffffff6004351661014b565b3480156100f257600080fd5b50610091610164565b34801561010757600080fd5b5061009161016a565b34801561011c57600080fd5b5061013e73ffffffffffffffffffffffffffffffffffffffff60043516610171565b005b600181565b60015481565b73ffffffffffffffffffffffffffffffffffffffff1690565b60005481565b6004545b90565b6101796101bf565b151561018457600080fd5b73ffffffffffffffffffffffffffffffffffffffff811615156101a657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b6000333014156101d15750600161016e565b6000546001146101e057600080fd5b6101fc6101ec3361014b565b600290600163ffffffff61020116565b905090565b600061020b6102e5565b600084815260208681526040808320815181546080948102820185019093526060810183815290939192849284919084018282801561026957602002820191906000526020600020905b815481526020019060010190808311610255575b505050918352505060018201546020820152600290910154604091820152810151909250151561029c57600092506102dc565b5060005b8151518110156102dc5781518051859190839081106102bb57fe5b9060200190602002015114156102d457600192506102dc565b6001016102a0565b50509392505050565b6040805160608181018352815260006020820181905291810191909152905600a165627a7a72305820c6b9d3e4935b475cd85148822039df7ee3c1959115d38893c9d9070cd78d329c0029",
  "deployedBytecode": "0x6080604052600436106100775763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663058b316c811461007c57806338f4edd4146100a357806363f14c3c146100b8578063aa0a5142146100e6578063c9d24ecc146100fb578063f5074f4114610110575b600080fd5b34801561008857600080fd5b50610091610140565b60408051918252519081900360200190f35b3480156100af57600080fd5b50610091610145565b3480156100c457600080fd5b5061009173ffffffffffffffffffffffffffffffffffffffff6004351661014b565b3480156100f257600080fd5b50610091610164565b34801561010757600080fd5b5061009161016a565b34801561011c57600080fd5b5061013e73ffffffffffffffffffffffffffffffffffffffff60043516610171565b005b600181565b60015481565b73ffffffffffffffffffffffffffffffffffffffff1690565b60005481565b6004545b90565b6101796101bf565b151561018457600080fd5b73ffffffffffffffffffffffffffffffffffffffff811615156101a657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16ff5b6000333014156101d15750600161016e565b6000546001146101e057600080fd5b6101fc6101ec3361014b565b600290600163ffffffff61020116565b905090565b600061020b6102e5565b600084815260208681526040808320815181546080948102820185019093526060810183815290939192849284919084018282801561026957602002820191906000526020600020905b815481526020019060010190808311610255575b505050918352505060018201546020820152600290910154604091820152810151909250151561029c57600092506102dc565b5060005b8151518110156102dc5781518051859190839081106102bb57fe5b9060200190602002015114156102d457600192506102dc565b6001016102a0565b50509392505050565b6040805160608181018352815260006020820181905291810191909152905600a165627a7a72305820c6b9d3e4935b475cd85148822039df7ee3c1959115d38893c9d9070cd78d329c0029",
  "sourceMap": "303:367:4:-;;;327:1:10;290:38;;367:1;334:34;;303:367:4;8:9:-1;5:2;;;30:1;27;20:12;5:2;303:367:4;;;;;;;",
  "deployedSourceMap": "303:367:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;220:42:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;220:42:10;;;;;;;;;;;;;;;;;;;;334:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;334:34:10;;;;848:128;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;848:128:10;;;;;;;290:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;290:38:10;;;;569:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;569:115:10;;;;492:176:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;492:176:4;;;;;;;;;220:42:10;261:1;220:42;:::o;334:34::-;;;;:::o;848:128::-;956:13;;;848:128::o;290:38::-;;;;:::o;569:115::-;662:15;;569:115;;:::o;492:176:4:-;1766:19:10;:17;:19::i;:::-;1758:28;;;;;;;;602:24:4;;;;;594:33;;;;;;650:10;637:24;;;1234:397:10;1310:10;1340;1362:4;1340:27;1336:109;;;-1:-1:-1;1430:4:10;1423:11;;1336:109;1531:19;;1554:1;1531:24;1523:33;;;;;;1573:51;1586:21;1596:10;1586:9;:21::i;:::-;1573:7;;261:1;1573:51;:12;:51;:::i;:::-;1566:58;;1234:397;:::o;761:414:13:-;871:10;897:12;;:::i;:::-;1006:6;912:17;;;;;;;;;;;897:32;;;;;;;;;;;;;;;;;;;;;;;912:17;;897:32;;912:17;;897:32;;;912:17;897:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;897:32:13;;;-1:-1:-1;;897:32:13;;;;;;;;;;;;;;;;;;943:5;;;897:32;;-1:-1:-1;943:10:13;939:53;;;976:5;969:12;;;;939:53;-1:-1:-1;1015:1:13;1001:168;1022:10;;:17;1018:21;;1001:168;;;1064:10;;:13;;1081:7;;1064:10;1075:1;;1064:13;;;;;;;;;;;;;;:24;1060:99;;;1116:4;1108:12;;1138:7;;1060:99;1041:3;;1001:168;;;761:414;;;;;;;:::o;303:367:4:-;;;;;;;;;;;;-1:-1:-1;303:367:4;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./KeyBase.sol\";\n\n/// @title Destructible\n/// @author genie\n/// @notice Base contract that can be destroyed by MANAGEMENT_KEY or the identity itself\n/// @dev Inspired by https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/lifecycle/Destructible.sol\n\ncontract Destructible is KeyBase {\n    /// @dev Transfers the current balance and terminates the contract\n    /// @param _recipient All funds in contract will be sent to this recipient\n    function destroyAndSend(address _recipient)\n        public\n        onlyManagementOrSelf\n    {\n        require(_recipient != address(0));\n        selfdestruct(_recipient);\n    }\n}",
  "sourcePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/identity/Destructible.sol",
  "ast": {
    "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/identity/Destructible.sol",
    "exportedSymbols": {
      "Destructible": [
        1133
      ]
    },
    "id": 1134,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1109,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/identity/KeyBase.sol",
        "file": "./KeyBase.sol",
        "id": 1110,
        "nodeType": "ImportDirective",
        "scope": 1134,
        "sourceUnit": 2270,
        "src": "26:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1111,
              "name": "KeyBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2269,
              "src": "328:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KeyBase_$2269",
                "typeString": "contract KeyBase"
              }
            },
            "id": 1112,
            "nodeType": "InheritanceSpecifier",
            "src": "328:7:4"
          }
        ],
        "contractDependencies": [
          2269
        ],
        "contractKind": "contract",
        "documentation": "@title Destructible\n @author genie\n @notice Base contract that can be destroyed by MANAGEMENT_KEY or the identity itself\n @dev Inspired by https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/lifecycle/Destructible.sol",
        "fullyImplemented": true,
        "id": 1133,
        "linearizedBaseContracts": [
          1133,
          2269
        ],
        "name": "Destructible",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1131,
              "nodeType": "Block",
              "src": "584:84:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1120,
                          "name": "_recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "602:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "624:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "616:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "616:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "602:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3939,
                        3940
                      ],
                      "referencedDeclaration": 3939,
                      "src": "594:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1126,
                  "nodeType": "ExpressionStatement",
                  "src": "594:33:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1128,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1114,
                        "src": "650:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1127,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3944,
                      "src": "637:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1130,
                  "nodeType": "ExpressionStatement",
                  "src": "637:24:4"
                }
              ]
            },
            "documentation": "@dev Transfers the current balance and terminates the contract\n @param _recipient All funds in contract will be sent to this recipient",
            "id": 1132,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1117,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1116,
                  "name": "onlyManagementOrSelf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2268,
                  "src": "559:20:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "559:20:4"
              }
            ],
            "name": "destroyAndSend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1114,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "516:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "515:20:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:4"
            },
            "scope": 1133,
            "src": "492:176:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1134,
        "src": "303:367:4"
      }
    ],
    "src": "0:670:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/identity/Destructible.sol",
    "exportedSymbols": {
      "Destructible": [
        1133
      ]
    },
    "id": 1134,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1109,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/coinplug/BangGijin/metabolics2.0/contracts/identity/KeyBase.sol",
        "file": "./KeyBase.sol",
        "id": 1110,
        "nodeType": "ImportDirective",
        "scope": 1134,
        "sourceUnit": 2270,
        "src": "26:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1111,
              "name": "KeyBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2269,
              "src": "328:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KeyBase_$2269",
                "typeString": "contract KeyBase"
              }
            },
            "id": 1112,
            "nodeType": "InheritanceSpecifier",
            "src": "328:7:4"
          }
        ],
        "contractDependencies": [
          2269
        ],
        "contractKind": "contract",
        "documentation": "@title Destructible\n @author genie\n @notice Base contract that can be destroyed by MANAGEMENT_KEY or the identity itself\n @dev Inspired by https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/lifecycle/Destructible.sol",
        "fullyImplemented": true,
        "id": 1133,
        "linearizedBaseContracts": [
          1133,
          2269
        ],
        "name": "Destructible",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1131,
              "nodeType": "Block",
              "src": "584:84:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1120,
                          "name": "_recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "602:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "624:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "616:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "616:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "602:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3939,
                        3940
                      ],
                      "referencedDeclaration": 3939,
                      "src": "594:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1126,
                  "nodeType": "ExpressionStatement",
                  "src": "594:33:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1128,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1114,
                        "src": "650:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1127,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3944,
                      "src": "637:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1130,
                  "nodeType": "ExpressionStatement",
                  "src": "637:24:4"
                }
              ]
            },
            "documentation": "@dev Transfers the current balance and terminates the contract\n @param _recipient All funds in contract will be sent to this recipient",
            "id": 1132,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1117,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1116,
                  "name": "onlyManagementOrSelf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2268,
                  "src": "559:20:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "559:20:4"
              }
            ],
            "name": "destroyAndSend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1114,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "516:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "515:20:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:4"
            },
            "scope": 1133,
            "src": "492:176:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1134,
        "src": "303:367:4"
      }
    ],
    "src": "0:670:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-23T00:48:27.045Z"
}